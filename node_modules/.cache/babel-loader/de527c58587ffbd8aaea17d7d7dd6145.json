{"ast":null,"code":"var _jsxFileName = \"/home/jiuxe/Escritorio/Lscript/React/juego-parejas/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport Tablero from './Tablero/Tablero';\nimport contruirBaraja from './utils/construirBaraja';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getEstadoInicial = () => {\n  const baraja = construirBaraja();\n  return {\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false,\n    numeroDeIntentos: 0\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = getEstadoInicial();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        numeroDeIntentos: this.state.numeroDeIntentos,\n        resetearPartida: () => this.resetearPartida()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tablero, {\n        baraja: this.state.baraja,\n        parejaSeleccionada: this.state.parejaSeleccionada,\n        seleccionarCarta: carta => this.seleccionarCarta(carta)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  seleccionarCarta(carta) {\n    if (this.state.estaComparando || this.state.parejaSeleccionada.indexOf(carta) > -1 || carta.fueAdivinida) {\n      return;\n    }\n\n    const parejaSeleccionada = [...this.state.parejaSeleccionada, carta];\n    this.setState({\n      parejaSeleccionada\n    });\n\n    if (parejaSeleccionada.length === 2) {\n      this.compararPareja(parejaSeleccionada);\n    }\n  }\n\n  compararPareja(parejaSeleccionada) {\n    this.setState({\n      estaComparando: true\n    });\n    setTimeout(() => {\n      const [primeraCarta, segundaCarta] = parejaSeleccionada;\n      let baraja = this.state.baraja;\n\n      if (primeraCarta.icono === segundaCarta.icono) {\n        baraja = baraja.map(carta => {\n          if (carta.icono !== primeraCarta.icono) {\n            return carta;\n          }\n\n          return { ...carta,\n            fueAdivinada: true\n          };\n        });\n      }\n\n      this.verificarSiHayGanador(baraja);\n      this.setState({\n        parejaSeleccionada: [],\n        baraja,\n        estaComparando: false,\n        numeroDeIntentos: this.state.numeroDeIntentos + 1\n      });\n    }, 1000);\n  }\n\n  verificarSiHayGanador(baraja) {\n    if (baraja.filter(carta => !carta.fueAdivinada).length === 0) {\n      alert(`Ganaste en ${this.state.numeroDeIntentos} intentos!`);\n    }\n  }\n\n  resetearPartida() {\n    this.setState(getEstadoInicial());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jiuxe/Escritorio/Lscript/React/juego-parejas/src/App.js"],"names":["React","Component","Header","Tablero","contruirBaraja","getEstadoInicial","baraja","construirBaraja","parejaSeleccionada","estaComparando","numeroDeIntentos","App","constructor","props","state","render","resetearPartida","carta","seleccionarCarta","indexOf","fueAdivinida","setState","length","compararPareja","setTimeout","primeraCarta","segundaCarta","icono","map","fueAdivinada","verificarSiHayGanador","filter","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,MAAM,GAAGC,eAAe,EAA9B;AACA,SAAO;AACLD,IAAAA,MADK;AAELE,IAAAA,kBAAkB,EAAE,EAFf;AAGLC,IAAAA,cAAc,EAAE,KAHX;AAILC,IAAAA,gBAAgB,EAAE;AAJb,GAAP;AAMD,CARD;;AAUA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaT,gBAAgB,EAA7B;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWJ,gBAD/B;AAEE,QAAA,eAAe,EAAE,MAAM,KAAKM,eAAL;AAFzB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,OAAD;AACE,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWR,MADrB;AAEE,QAAA,kBAAkB,EAAE,KAAKQ,KAAL,CAAWN,kBAFjC;AAGE,QAAA,gBAAgB,EAAGS,KAAD,IAAW,KAAKC,gBAAL,CAAsBD,KAAtB;AAH/B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAEDC,EAAAA,gBAAgB,CAACD,KAAD,EAAQ;AACtB,QACE,KAAKH,KAAL,CAAWL,cAAX,IACA,KAAKK,KAAL,CAAWN,kBAAX,CAA8BW,OAA9B,CAAsCF,KAAtC,IAA+C,CAAC,CADhD,IAEAA,KAAK,CAACG,YAHR,EAIE;AACA;AACD;;AAED,UAAMZ,kBAAkB,GAAG,CAAC,GAAG,KAAKM,KAAL,CAAWN,kBAAf,EAAmCS,KAAnC,CAA3B;AACA,SAAKI,QAAL,CAAc;AACZb,MAAAA;AADY,KAAd;;AAIA,QAAIA,kBAAkB,CAACc,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,WAAKC,cAAL,CAAoBf,kBAApB;AACD;AACF;;AAEDe,EAAAA,cAAc,CAACf,kBAAD,EAAqB;AACjC,SAAKa,QAAL,CAAc;AAACZ,MAAAA,cAAc,EAAE;AAAjB,KAAd;AAEAe,IAAAA,UAAU,CAAC,MAAM;AACf,YAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BlB,kBAArC;AACA,UAAIF,MAAM,GAAG,KAAKQ,KAAL,CAAWR,MAAxB;;AAEA,UAAImB,YAAY,CAACE,KAAb,KAAuBD,YAAY,CAACC,KAAxC,EAA+C;AAC7CrB,QAAAA,MAAM,GAAGA,MAAM,CAACsB,GAAP,CAAYX,KAAD,IAAW;AAC7B,cAAIA,KAAK,CAACU,KAAN,KAAgBF,YAAY,CAACE,KAAjC,EAAwC;AACtC,mBAAOV,KAAP;AACD;;AAED,iBAAO,EAAC,GAAGA,KAAJ;AAAWY,YAAAA,YAAY,EAAE;AAAzB,WAAP;AACD,SANQ,CAAT;AAOD;;AAED,WAAKC,qBAAL,CAA2BxB,MAA3B;AACA,WAAKe,QAAL,CAAc;AACZb,QAAAA,kBAAkB,EAAE,EADR;AAEZF,QAAAA,MAFY;AAGZG,QAAAA,cAAc,EAAE,KAHJ;AAIZC,QAAAA,gBAAgB,EAAE,KAAKI,KAAL,CAAWJ,gBAAX,GAA8B;AAJpC,OAAd;AAMD,KArBS,EAqBP,IArBO,CAAV;AAsBD;;AAEDoB,EAAAA,qBAAqB,CAACxB,MAAD,EAAS;AAC5B,QACEA,MAAM,CAACyB,MAAP,CAAed,KAAD,IAAW,CAACA,KAAK,CAACY,YAAhC,EAA8CP,MAA9C,KAAyD,CAD3D,EAEE;AACAU,MAAAA,KAAK,CAAE,cAAa,KAAKlB,KAAL,CAAWJ,gBAAiB,YAA3C,CAAL;AACD;AACF;;AAEDM,EAAAA,eAAe,GAAG;AAChB,SAAKK,QAAL,CACEhB,gBAAgB,EADlB;AAGD;;AAhFyB;;AAmF5B,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header'\nimport Tablero from './Tablero/Tablero'\nimport contruirBaraja from './utils/construirBaraja';\n\n\nconst getEstadoInicial = () => {\n  const baraja = construirBaraja();\n  return {\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false,\n    numeroDeIntentos: 0    \n  };\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = getEstadoInicial();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header \n          numeroDeIntentos={this.state.numeroDeIntentos}\n          resetearPartida={() => this.resetearPartida()}\n        />\n        <Tablero \n          baraja={this.state.baraja}\n          parejaSeleccionada={this.state.parejaSeleccionada}\n          seleccionarCarta={(carta) => this.seleccionarCarta(carta)}\n        />\n      </div>\n    );\n  }\n\n  seleccionarCarta(carta) {\n    if (\n      this.state.estaComparando ||\n      this.state.parejaSeleccionada.indexOf(carta) > -1 ||\n      carta.fueAdivinida\n    ) {\n      return;\n    }\n\n    const parejaSeleccionada = [...this.state.parejaSeleccionada, carta];\n    this.setState({\n      parejaSeleccionada\n    });\n\n    if (parejaSeleccionada.length === 2) {\n      this.compararPareja(parejaSeleccionada);\n    }\n  }\n\n  compararPareja(parejaSeleccionada) {\n    this.setState({estaComparando: true});\n\n    setTimeout(() => {\n      const [primeraCarta, segundaCarta] = parejaSeleccionada;\n      let baraja = this.state.baraja;\n\n      if (primeraCarta.icono === segundaCarta.icono) {\n        baraja = baraja.map((carta) => {\n          if (carta.icono !== primeraCarta.icono) {\n            return carta;\n          }\n\n          return {...carta, fueAdivinada: true};\n        });\n      }\n\n      this.verificarSiHayGanador(baraja);\n      this.setState({\n        parejaSeleccionada: [],\n        baraja,\n        estaComparando: false,\n        numeroDeIntentos: this.state.numeroDeIntentos + 1\n      })\n    }, 1000)\n  }\n\n  verificarSiHayGanador(baraja) {\n    if (\n      baraja.filter((carta) => !carta.fueAdivinada).length === 0\n    ) {\n      alert(`Ganaste en ${this.state.numeroDeIntentos} intentos!`);\n    }\n  }\n\n  resetearPartida() {\n    this.setState(\n      getEstadoInicial()\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jiuxe/Escritorio/Lscript/React/juego-parejas/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport Tablero from './Tablero/Tablero';\nimport contruirBaraja from './utils/construirBaraja';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return {\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = getEstadoInicial();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tablero, {\n        baraja: this.state.baraja,\n        parejaSeleccionada: this.state.parejaSeleccionada,\n        seleccionarCarta: carta => this.seleccionarCarta(carta)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  seleccionarCarta(carta) {\n    if (this.state.estaComparando || this.state.parejaSeleccionada.indexOf(carta) > -1 || carta.fueAdivinida) {\n      return;\n    }\n\n    const parejaSeleccionada = [...this.state.parejaSeleccionada, carta];\n    this.setState({\n      parejaSeleccionada\n    });\n    console.log(parejaSeleccionada.length);\n\n    if (parejaSeleccionada.length === 2) {\n      console.log(\"Entra\");\n      this.compararPareja(parejaSeleccionada);\n      console.log(\"Sale\");\n    }\n  }\n\n  compararPareja(parejaSeleccionada) {\n    this.setState({\n      estaComparando: true\n    });\n    setTimeout(() => {\n      const [primeraCarta, segundaCarta] = parejaSeleccionada;\n      let baraja = this.state.baraja;\n\n      if (primeraCarta.icono === segundaCarta.icono) {\n        baraja = baraja.map(carta => {\n          if (carta.icono !== primeraCarta.icono) {\n            return carta;\n          }\n\n          return { ...carta,\n            fueAdivinada: true\n          };\n        });\n      }\n\n      this.state.parejaSeleccionada = [];\n      this.state.baraja = baraja;\n      this.state.estaComparando = false;\n      /*this.setState({\n        parejaSeleccionada: [],\n        baraja,\n        estaComparando: false,\n      });*/\n    }, 1);\n  }\n\n}\n/*\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return{\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n}\n\nfunction App() {\n\n  let state = getEstadoInicial()\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tablero \n        baraja = {state.baraja}\n        parejaSeleccionada = {state.parejaSeleccionada}\n        seleccionarCarta = {(carta) => seleccionarCarta(carta, state)} \n      />\n    </div>\n  );\n}\n\nfunction seleccionarCarta(carta, state){\n  \n  if( state.estaComparando ||\n      state.parejaSeleccionada.indexOf(carta) > -1 ||\n      carta.fueAdivinada\n    ){\n      return;\n    }\n\n  console.log(\"carta seleccionada\")\n  state.parejaSeleccionada = [...state.parejaSeleccionada, carta]\n  console.log(state.parejaSeleccionada)\n\n  if (state.parejaSeleccionada.length === 2){\n    compararPareja(state)\n  }\n}\n\nfunction compararPareja(state){\n  state.estaComparando = true;\n\n  setTimeout(() => {\n    const [primeraCarta, segundaCarta] = state.parejaSeleccionada;\n    let baraja = state.baraja;\n\n    if( primeraCarta.icono === segundaCarta.icono){\n      baraja = baraja.map((carta) => {\n        if(carta.icono !== primeraCarta.icono){\n          return carta;\n        }\n        console.log(\"Pareja encontrada\")\n        carta.fueAdivinada = true\n        return {...carta};\n      });\n    }\n\n    state.parejaSeleccionada = []\n    state.baraja = baraja\n    state.estaComparando = false\n\n  }, 1000)\n\n}\n\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/home/jiuxe/Escritorio/Lscript/React/juego-parejas/src/App.js"],"names":["React","Component","Header","Tablero","contruirBaraja","getEstadoInicial","baraja","parejaSeleccionada","estaComparando","App","constructor","props","state","render","carta","seleccionarCarta","indexOf","fueAdivinida","setState","console","log","length","compararPareja","setTimeout","primeraCarta","segundaCarta","icono","map","fueAdivinada"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header'\nimport Tablero from './Tablero/Tablero'\nimport contruirBaraja from './utils/construirBaraja';\n\n\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return{\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = getEstadoInicial();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Tablero \n          baraja={this.state.baraja}\n          parejaSeleccionada={this.state.parejaSeleccionada}\n          seleccionarCarta={(carta) => this.seleccionarCarta(carta)}\n        />\n      </div>\n    );\n  }\n\n  seleccionarCarta(carta) {\n    if (\n      this.state.estaComparando ||\n      this.state.parejaSeleccionada.indexOf(carta) > -1 ||\n      carta.fueAdivinida\n    ) {\n      return;\n    }\n\n    const parejaSeleccionada = [...this.state.parejaSeleccionada, carta];\n    this.setState({\n      parejaSeleccionada\n    });\n\n    console.log(parejaSeleccionada.length)\n\n    if (parejaSeleccionada.length === 2) {\n      console.log(\"Entra\")\n      this.compararPareja(parejaSeleccionada);\n      console.log(\"Sale\")\n    }\n  }\n\n  compararPareja(parejaSeleccionada) {\n    this.setState({estaComparando: true});\n\n    setTimeout(() => {\n      const [primeraCarta, segundaCarta] = parejaSeleccionada;\n      let baraja = this.state.baraja;\n\n      if (primeraCarta.icono === segundaCarta.icono) {\n        baraja = baraja.map((carta) => {\n          if (carta.icono !== primeraCarta.icono) {\n            return carta;\n          }\n\n          return {...carta, fueAdivinada: true};\n        });\n      }\n\n      this.state.parejaSeleccionada = []\n      this.state.baraja = baraja\n      this.state.estaComparando = false\n\n      /*this.setState({\n        parejaSeleccionada: [],\n        baraja,\n        estaComparando: false,\n      });*/\n    }, 1)\n  }\n}\n\n/*\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return{\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n}\n\nfunction App() {\n\n  let state = getEstadoInicial()\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tablero \n        baraja = {state.baraja}\n        parejaSeleccionada = {state.parejaSeleccionada}\n        seleccionarCarta = {(carta) => seleccionarCarta(carta, state)} \n      />\n    </div>\n  );\n}\n\nfunction seleccionarCarta(carta, state){\n  \n  if( state.estaComparando ||\n      state.parejaSeleccionada.indexOf(carta) > -1 ||\n      carta.fueAdivinada\n    ){\n      return;\n    }\n\n  console.log(\"carta seleccionada\")\n  state.parejaSeleccionada = [...state.parejaSeleccionada, carta]\n  console.log(state.parejaSeleccionada)\n\n  if (state.parejaSeleccionada.length === 2){\n    compararPareja(state)\n  }\n}\n\nfunction compararPareja(state){\n  state.estaComparando = true;\n\n  setTimeout(() => {\n    const [primeraCarta, segundaCarta] = state.parejaSeleccionada;\n    let baraja = state.baraja;\n\n    if( primeraCarta.icono === segundaCarta.icono){\n      baraja = baraja.map((carta) => {\n        if(carta.icono !== primeraCarta.icono){\n          return carta;\n        }\n        console.log(\"Pareja encontrada\")\n        carta.fueAdivinada = true\n        return {...carta};\n      });\n    }\n\n    state.parejaSeleccionada = []\n    state.baraja = baraja\n    state.estaComparando = false\n\n  }, 1000)\n\n}\n\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
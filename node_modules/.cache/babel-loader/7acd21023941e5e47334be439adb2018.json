{"ast":null,"code":"var _jsxFileName = \"/home/jiuxe/Escritorio/Lscript/React/juego-parejas/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport Tablero from './Tablero/Tablero';\nimport contruirBaraja from './utils/construirBaraja';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return {\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = getEstadoInicial();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tablero, {\n        baraja: this.state.baraja,\n        parejaSeleccionada: this.state.parejaSeleccionada,\n        seleccionarCarta: carta => this.seleccionarCarta(carta)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  seleccionarCarta(carta) {\n    if (this.state.estaComparando || this.state.parejaSeleccionada.indexOf(carta) > -1 || carta.fueAdivinida) {\n      return;\n    }\n\n    const parejaSeleccionada = [...this.state.parejaSeleccionada, carta];\n    this.setState({\n      parejaSeleccionada\n    });\n\n    if (parejaSeleccionada.length === 2) {\n      this.compararPareja(parejaSeleccionada);\n    }\n  }\n\n  compararPareja(state) {\n    state.estaComparando = true;\n    setTimeout(() => {\n      const [primeraCarta, segundaCarta] = this.state.parejaSeleccionada;\n      let baraja = state.baraja;\n\n      if (primeraCarta.icono === segundaCarta.icono) {\n        baraja = baraja.map(carta => {\n          if (carta.icono !== primeraCarta.icono) {\n            return carta;\n          }\n\n          console.log(\"Pareja encontrada\");\n          carta.fueAdivinada = true;\n          return { ...carta\n          };\n        });\n      }\n\n      state.parejaSeleccionada = [];\n      state.baraja = baraja;\n      state.estaComparando = false;\n    }, 1000);\n  }\n\n}\n/*\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return{\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n}\n\nfunction App() {\n\n  let state = getEstadoInicial()\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tablero \n        baraja = {state.baraja}\n        parejaSeleccionada = {state.parejaSeleccionada}\n        seleccionarCarta = {(carta) => seleccionarCarta(carta, state)} \n      />\n    </div>\n  );\n}\n\nfunction seleccionarCarta(carta, state){\n  \n  if( state.estaComparando ||\n      state.parejaSeleccionada.indexOf(carta) > -1 ||\n      carta.fueAdivinada\n    ){\n      return;\n    }\n\n  console.log(\"carta seleccionada\")\n  state.parejaSeleccionada = [...state.parejaSeleccionada, carta]\n  console.log(state.parejaSeleccionada)\n\n  if (state.parejaSeleccionada.length === 2){\n    compararPareja(state)\n  }\n}\n\nfunction compararPareja(state){\n  state.estaComparando = true;\n\n  setTimeout(() => {\n    const [primeraCarta, segundaCarta] = state.parejaSeleccionada;\n    let baraja = state.baraja;\n\n    if( primeraCarta.icono === segundaCarta.icono){\n      baraja = baraja.map((carta) => {\n        if(carta.icono !== primeraCarta.icono){\n          return carta;\n        }\n        console.log(\"Pareja encontrada\")\n        carta.fueAdivinada = true\n        return {...carta};\n      });\n    }\n\n    state.parejaSeleccionada = []\n    state.baraja = baraja\n    state.estaComparando = false\n\n  }, 1000)\n\n}\n\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/home/jiuxe/Escritorio/Lscript/React/juego-parejas/src/App.js"],"names":["React","Component","Header","Tablero","contruirBaraja","getEstadoInicial","baraja","parejaSeleccionada","estaComparando","App","constructor","props","state","render","carta","seleccionarCarta","indexOf","fueAdivinida","setState","length","compararPareja","setTimeout","primeraCarta","segundaCarta","icono","map","console","log","fueAdivinada"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header/Header'\nimport Tablero from './Tablero/Tablero'\nimport contruirBaraja from './utils/construirBaraja';\n\n\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return{\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = getEstadoInicial();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Tablero \n          baraja={this.state.baraja}\n          parejaSeleccionada={this.state.parejaSeleccionada}\n          seleccionarCarta={(carta) => this.seleccionarCarta(carta)}\n        />\n      </div>\n    );\n  }\n\n  seleccionarCarta(carta) {\n    if (\n      this.state.estaComparando ||\n      this.state.parejaSeleccionada.indexOf(carta) > -1 ||\n      carta.fueAdivinida\n    ) {\n      return;\n    }\n\n    const parejaSeleccionada = [...this.state.parejaSeleccionada, carta];\n    this.setState({\n      parejaSeleccionada\n    });\n\n    if (parejaSeleccionada.length === 2) {\n      this.compararPareja(parejaSeleccionada);\n    }\n  }\n\n  compararPareja(state){\n    state.estaComparando = true;\n  \n    setTimeout(() => {\n      const [primeraCarta, segundaCarta] = this.state.parejaSeleccionada;\n      let baraja = state.baraja;\n  \n      if( primeraCarta.icono === segundaCarta.icono){\n        baraja = baraja.map((carta) => {\n          if(carta.icono !== primeraCarta.icono){\n            return carta;\n          }\n          console.log(\"Pareja encontrada\")\n          carta.fueAdivinada = true\n          return {...carta};\n        });\n      }\n  \n      state.parejaSeleccionada = []\n      state.baraja = baraja\n      state.estaComparando = false\n  \n    }, 1000)\n  \n  }\n}\n\n/*\nconst getEstadoInicial = () => {\n  const baraja = contruirBaraja();\n  return{\n    baraja,\n    parejaSeleccionada: [],\n    estaComparando: false\n  };\n}\n\nfunction App() {\n\n  let state = getEstadoInicial()\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tablero \n        baraja = {state.baraja}\n        parejaSeleccionada = {state.parejaSeleccionada}\n        seleccionarCarta = {(carta) => seleccionarCarta(carta, state)} \n      />\n    </div>\n  );\n}\n\nfunction seleccionarCarta(carta, state){\n  \n  if( state.estaComparando ||\n      state.parejaSeleccionada.indexOf(carta) > -1 ||\n      carta.fueAdivinada\n    ){\n      return;\n    }\n\n  console.log(\"carta seleccionada\")\n  state.parejaSeleccionada = [...state.parejaSeleccionada, carta]\n  console.log(state.parejaSeleccionada)\n\n  if (state.parejaSeleccionada.length === 2){\n    compararPareja(state)\n  }\n}\n\nfunction compararPareja(state){\n  state.estaComparando = true;\n\n  setTimeout(() => {\n    const [primeraCarta, segundaCarta] = state.parejaSeleccionada;\n    let baraja = state.baraja;\n\n    if( primeraCarta.icono === segundaCarta.icono){\n      baraja = baraja.map((carta) => {\n        if(carta.icono !== primeraCarta.icono){\n          return carta;\n        }\n        console.log(\"Pareja encontrada\")\n        carta.fueAdivinada = true\n        return {...carta};\n      });\n    }\n\n    state.parejaSeleccionada = []\n    state.baraja = baraja\n    state.estaComparando = false\n\n  }, 1000)\n\n}\n\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}